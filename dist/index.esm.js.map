{"version":3,"file":"index.esm.js","sources":["../src/patchStore.ts","../src/useSelector.ts","../src/utils.ts","../src/useTrackedState.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-ts-ignore */\n\nimport {\n  // @ts-ignore\n  createMutableSource,\n} from 'react';\nimport {\n  Action as ReduxAction,\n  Store,\n} from 'redux';\n\nexport type PatchedStore<State, Action extends ReduxAction<any>> = {\n  mutableSource: any;\n} & Store<State, Action>;\n\n/**\n * patch Redux store for React\n *\n * @example\n * import { createStore } from 'redux';\n * import { patchStore } from 'reactive-react-redux';\n *\n * const reducer = ...;\n * const store = patchStore(createStore(reducer));\n */\nexport const patchStore = <State, Action extends ReduxAction<any>>(\n  store: Store<State, Action>,\n) => {\n  const mutableSource = createMutableSource(store, () => store.getState());\n  (store as PatchedStore<State, Action>).mutableSource = mutableSource;\n  return store as PatchedStore<State, Action>;\n};\n\nexport const subscribe = <State, Action extends ReduxAction<any>>(\n  store: Store<State, Action>,\n  callback: () => void,\n) => {\n  const unsubscribe = store.subscribe(callback);\n  return unsubscribe;\n};\n","/* eslint-disable @typescript-eslint/ban-ts-ignore */\n\nimport {\n  useCallback,\n  // @ts-ignore\n  useMutableSource,\n} from 'react';\nimport {\n  Action as ReduxAction,\n  Store,\n} from 'redux';\n\nimport { PatchedStore, subscribe } from './patchStore';\n\n/**\n * useSelector hook\n *\n * selector has to be stable. Either define it outside render\n * or use useCallback if selector uses props.\n *\n * @example\n * import { useCallback } from 'react';\n * import { useSelector } from 'reactive-react-redux';\n *\n * const Component = ({ count }) => {\n *   const isBigger = useSelector(store, useCallack(state => state.count > count, [count]));\n *   ...\n * };\n */\nexport const useSelector = <State, Action extends ReduxAction<any>, Selected>(\n  patchedStore: PatchedStore<State, Action>,\n  selector: (state: State) => Selected,\n) => {\n  const { mutableSource } = patchedStore;\n  const getSnapshot = useCallback((store: Store<State, Action>) => (\n    selector(store.getState())\n  ), [selector]);\n  const selected: Selected = useMutableSource(mutableSource, getSnapshot, subscribe);\n  return selected;\n};\n","import {\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useDebugValue,\n} from 'react';\n\nconst isClient = (\n  typeof window !== 'undefined'\n  && !/ServerSideRendering/.test(window.navigator && window.navigator.userAgent)\n);\n\nexport const useIsomorphicLayoutEffect = isClient ? useLayoutEffect : useEffect;\n\nconst affectedToPathList = <State>(\n  state: State,\n  affected: WeakMap<object, Set<string>>,\n) => {\n  const list: string[][] = [];\n  const walk = (obj: unknown, path?: string[]) => {\n    const used = affected.get(obj as object);\n    if (used) {\n      used.forEach((key) => {\n        walk((obj as { [k: string]: object })[key], path ? [...path, key] : [key]);\n      });\n    } else if (path) {\n      list.push(path);\n    }\n  };\n  walk(state);\n  return list;\n};\n\nexport const useAffectedDebugValue = <State>(\n  state: State,\n  affected: WeakMap<object, Set<string>>,\n) => {\n  const pathList = useRef<string[][]>();\n  useEffect(() => {\n    pathList.current = affectedToPathList(state, affected);\n  });\n  useDebugValue(pathList);\n};\n","/* eslint-disable @typescript-eslint/ban-ts-ignore */\n\nimport {\n  useCallback,\n  // @ts-ignore\n  useMutableSource,\n  useRef,\n} from 'react';\nimport {\n  Action as ReduxAction,\n  Store,\n} from 'redux';\nimport {\n  createDeepProxy,\n  isDeepChanged,\n  MODE_ASSUME_UNCHANGED_IF_UNAFFECTED,\n  MODE_IGNORE_REF_EQUALITY,\n  MODE_ASSUME_UNCHANGED_IF_UNAFFECTED_IN_DEEP,\n} from 'proxy-compare';\n\nimport { PatchedStore, subscribe } from './patchStore';\nimport { useIsomorphicLayoutEffect, useAffectedDebugValue } from './utils';\n\nconst MODE_ALWAYS_ASSUME_CHANGED_IF_UNAFFECTED = 0;\nconst MODE_ALWAYS_ASSUME_UNCHANGED_IF_UNAFFECTED = (\n  MODE_ASSUME_UNCHANGED_IF_UNAFFECTED | MODE_ASSUME_UNCHANGED_IF_UNAFFECTED_IN_DEEP\n);\nconst MODE_MUTABLE_ROOT_STATE = MODE_IGNORE_REF_EQUALITY; // only for root\nconst MODE_DEFAULT = MODE_ASSUME_UNCHANGED_IF_UNAFFECTED; // only for root\n\ntype Opts = any; // TODO types\n\n/**\n * useTrackedState hook\n *\n * It return the Redux state wrapped by Proxy,\n * and the state prperty access is tracked.\n * It will only re-render if accessed properties are changed.\n *\n * @example\n * import { useTrackedState } from 'reactive-react-redux';\n *\n * const Component = () => {\n *   const state = useTrackedState(store);\n *   ...\n * };\n */\nexport const useTrackedState = <State, Action extends ReduxAction<any>>(\n  patchedStore: PatchedStore<State, Action>,\n  opts: Opts = {},\n) => {\n  const { mutableSource } = patchedStore;\n  const affected = new WeakMap();\n  const lastTracked = useRef<any>();\n  const getSnapshot = useCallback((store: Store<State, Action>) => {\n    const nextState = store.getState();\n    const lastTrackedCurrent = lastTracked.current;\n    if (!lastTrackedCurrent) return nextState;\n    if (lastTrackedCurrent.affected !== affected) return nextState;\n    if (lastTrackedCurrent.state === nextState) return nextState;\n    if (isDeepChanged(\n      lastTrackedCurrent.state,\n      nextState,\n      lastTrackedCurrent.affected,\n      lastTrackedCurrent.cache,\n      lastTrackedCurrent.mode,\n    )) return nextState;\n    // not changed\n    return lastTrackedCurrent.state;\n  }, [affected]);\n  const state: State = useMutableSource(mutableSource, getSnapshot, subscribe);\n  useIsomorphicLayoutEffect(() => {\n    lastTracked.current = {\n      state,\n      affected,\n      cache: new WeakMap(),\n      /* eslint-disable no-nested-ternary, indent */\n      mode:\n      opts.unstable_forceUpdateForStateChange ? MODE_ALWAYS_ASSUME_CHANGED_IF_UNAFFECTED\n      : opts.unstable_ignoreIntermediateObjectUsage ? MODE_ALWAYS_ASSUME_UNCHANGED_IF_UNAFFECTED\n      : opts.unstable_ignoreStateEquality ? MODE_MUTABLE_ROOT_STATE\n      : /* default */ MODE_DEFAULT,\n      /* eslint-enable no-nested-ternary, indent */\n    };\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useAffectedDebugValue(state, affected);\n  }\n  const proxyCache = useRef(new WeakMap()); // per-hook proxyCache\n  return createDeepProxy(state, affected, proxyCache.current);\n};\n"],"names":["patchStore","store","mutableSource","createMutableSource","getState","subscribe","callback","useSelector","patchedStore","selector","getSnapshot","useCallback","useMutableSource","useIsomorphicLayoutEffect","window","test","navigator","userAgent","useEffect","useLayoutEffect","MODE_ALWAYS_ASSUME_UNCHANGED_IF_UNAFFECTED","MODE_ASSUME_UNCHANGED_IF_UNAFFECTED","MODE_ASSUME_UNCHANGED_IF_UNAFFECTED_IN_DEEP","MODE_MUTABLE_ROOT_STATE","MODE_IGNORE_REF_EQUALITY","MODE_DEFAULT","useTrackedState","opts","affected","WeakMap","lastTracked","useRef","nextState","lastTrackedCurrent","current","state","isDeepChanged","cache","mode","unstable_forceUpdateForStateChange","unstable_ignoreIntermediateObjectUsage","unstable_ignoreStateEquality","process","env","NODE_ENV","pathList","list","walk","obj","path","used","get","forEach","key","push","affectedToPathList","useDebugValue","useAffectedDebugValue","proxyCache","createDeepProxy"],"mappings":"yYAyBaA,IAAAA,EAAa,SACxBC,GAEA,IAAMC,EAAgBC,EAAoBF,EAAO,kBAAMA,EAAMG,aAE7D,OADCH,EAAsCC,cAAgBA,EAChDD,GAGII,EAAY,SACvBJ,EACAK,GAGA,OADoBL,EAAMI,UAAUC,ICRzBC,EAAc,SACzBC,EACAC,OAEQP,EAAkBM,EAAlBN,cACFQ,EAAcC,EAAY,SAACV,UAC/BQ,EAASR,EAAMG,aACd,CAACK,IAEJ,OAD2BG,EAAiBV,EAAeQ,EAAaL,ICzB7DQ,EAJO,oBAAXC,QACH,sBAAsBC,KAAKD,OAAOE,WAAaF,OAAOE,UAAUC,WAGAC,EAAlBC,ECY9CC,EACJC,EAAsCC,EAElCC,EAA0BC,EAC1BC,EAAeJ,EAmBRK,EAAkB,SAC7BlB,EACAmB,YAAAA,IAAAA,EAAa,QAELzB,EAAkBM,EAAlBN,cACF0B,EAAW,IAAIC,QACfC,EAAcC,IACdrB,EAAcC,EAAY,SAACV,GAC/B,IAAM+B,EAAY/B,EAAMG,WAClB6B,EAAqBH,EAAYI,QACvC,OAAKD,EACDA,EAAmBL,WAAaA,GAChCK,EAAmBE,QAAUH,GAC7BI,EACFH,EAAmBE,MACnBH,EACAC,EAAmBL,SACnBK,EAAmBI,MACnBJ,EAAmBK,MAPgCN,EAU9CC,EAAmBE,MAXMH,GAY/B,CAACJ,IACEO,EAAevB,EAAiBV,EAAeQ,EAAaL,GAClEQ,EAA0B,WACxBiB,EAAYI,QAAU,CACpBC,MAAAA,EACAP,SAAAA,EACAS,MAAO,IAAIR,QAEXS,KACAX,EAAKY,mCAvDsC,EAwDzCZ,EAAKa,uCAAyCpB,EAC9CO,EAAKc,6BAA+BlB,EACtBE,KAIS,eAAzBiB,QAAQC,IAAIC,UDpDmB,SACnCT,EACAP,GAEA,IAAMiB,EAAWd,IACjBb,EAAU,WACR2B,EAASX,QAzBc,SACzBC,EACAP,GAEA,IAAMkB,EAAmB,GAYzB,OAXa,SAAPC,EAAQC,EAAcC,GAC1B,IAAMC,EAAOtB,EAASuB,IAAIH,GACtBE,EACFA,EAAKE,QAAQ,SAACC,GACZN,EAAMC,EAAgCK,GAAMJ,YAAWA,GAAMI,IAAO,CAACA,MAE9DJ,GACTH,EAAKQ,KAAKL,GAGdF,CAAKZ,GACEW,EAScS,CAAmBpB,EAAOP,KAE/C4B,EAAcX,GC8CZY,CAAsBtB,EAAOP,GAE/B,IAAM8B,EAAa3B,EAAO,IAAIF,SAC9B,OAAO8B,EAAgBxB,EAAOP,EAAU8B,EAAWxB"}